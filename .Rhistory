renv::deactivate()
remotes::install_github('yihui/xaringan')
if (!requireNamespace("xaringan"))
remotes::install_github("yihui/xaringan")
devtools::install_github('yihui/xaringan')
install.packages("remotes")
install.packages("remotes")
install.packages("devtools")
devtools::install_github('yihui/xaringan')
remotes::install_github('yihui/xaringan')
install.packages("pkgbuild")
remotes::install_github('yihui/xaringan')
devtools::install_github('yihui/xaringan')
install.packages(‘processx’)
install.packages("processx")
devtools::install_github('yihui/xaringan')
install.packages("ps")
devtools::install_github('yihui/xaringan')
install.packages("prettyunits")
devtools::install_github('yihui/xaringan')
install.packages("pkgload")
devtools::install_github('yihui/xaringan')
install.packages("testthat")
install.packages("testthat")
install.packages("testthat")
install.packages("testthat")
install.packages("testthat")
install.packages("testthat")
devtools::install_github('yihui/xaringan')
install.packages('xaringan')
xaringan:::inf_mr()
xaringan:::inf_mr()
knitr::include_graphics("pic_1.png")
df <- data.frame(time, status, sex)
# load in data
time <- c(4,6,8,11,15,15,20,20,25,31)
status <- c(1,1,0,1,1,1,1,0,1,0)
sex <- c(1,1,1,2,1,1,2,2,2,2)
df <- data.frame(time, status, sex)
View(df)
# table and curves using log
fit <- survfit(Surv(time, status) ~ 1)
ggsurvplot(fit, df)
summary(fit)
library(survival)
library(survminer)
# load in data
time <- c(4,6,8,11,15,15,20,20,25,31)
status <- c(1,1,0,1,1,1,1,0,1,0)
sex <- c(1,1,1,2,1,1,2,2,2,2)
View(fit)
df <- data.frame(time, status, sex)
# table and curves using log-log
fit <- survfit(Surv(time, status) ~ 1, conf.type = "log-log")
# table and curves using log-log
fit <- survfit(Surv(time, status) ~ 1, conf.type = "log-log")
summary(fit)
ggsurvplot(fit, df)
# by sex
fit2 <- survfit(Surv(time, status) ~ sex, conf.type = "log-log")
# table and curves using log-log
fit <- survfit(Surv(time, status) ~ 1, conf.type = "log-log", df)
# by sex
fit2 <- survfit(Surv(time, status) ~ sex, conf.type = "log-log", df)
ggsurvplot(fit2, data = df)
survdiff(Surv(time, status) ~ sex, data = df)
ggsurvplot(fit2, conf.type = "log-log", data = df)
survplot(fit2, conf.type = "log-log", data = df)
library(survival)
library(survminer)
# load in data
time <- c(4,6,8,11,15,15,20,20,25,31)
status <- c(1,1,0,1,1,1,1,0,1,0)
sex <- c(1,1,1,2,1,1,2,2,2,2)
df <- data.frame(time, status, sex)
# table and curves using log-log
fit <- survfit(Surv(time, status) ~ 1, conf.type = "log-log", df)
summary(fit)
ggsurvplot(fit, df)
# by sex
fit2 <- survfit(Surv(time, status) ~ sex, conf.type = "log-log", df)
ggsurvplot(fit2, data = df)
# Logrank test
survdiff(Surv(time, status) ~ sex, data = df)
ggsurvplot(fit2, data = df,
pval = TRUE, conf.int = TRUE,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
palette = c("#E7B800", "#2E9FDF"))
xaringan:::inf_mr()
xaringan:::inf_mr()
